<!DOCTYPE html>
<html>
  <head>
    <%- include('../partials/head') %>
  </head>
  <body>
    <%- include('../partials/nav') %>

    <div class="container mb-3">

      <nav aria-label="breadcrumb">
        <ol class="breadcrumb p-1 pl-2 pr-2">
          <li class="breadcrumb-item"><a href="/">Home</a></li>
          <li class="breadcrumb-item"><a href="/posts">Community</a></li>
          <li class="breadcrumb-item active" aria-current="page"><%= post.number %>. <%= post.title %></li>
        </ol>
      </nav>

      <div class="card">
        <h5 class="card-header p-2" data-search-highlight="title"><%= post.number %>. <%= post.title %></h5>
        <div class="row">

          <div class="col-md-7 col-lg-8 col-xl-9 order-sm-2 order-md-1">
            <div class="post-body p-2" data-search-highlight="body" id="postBody"><p class="postBodyClass"><%= post.body %></p></div>
          </div>

          <div class="col-md-5 col-lg-4 col-xl-3 order-sm-1 order-md-2">
            <div class="post-info card m-2 p-2">
              <div class="border-bottom pb-1 mb-1">
                <div><span>Author</span> : <span data-search-highlight="name"><%= post.name %></span></div>
                <div><span>Views</span> : <span><%= post.view %></span></div>
              </div>
              <div><span>Created</span> : <span data-date-time="<%= post.createAt %>"></span></div>
              <% if(post.updateAt) { %>
                <div><span>Updated</span> : <span data-date-time="<%= post.updateAt %>"></span></div>
              <% } %>
            </div>
          </div>

        </div>
      </div>

      <div class="mt-3">
        <a class="btn btn-primary" href="/posts<%= getPostQueryString() %>">Back</a>
        <a class="btn btn-primary" href="/password/<%= post.number %>/edit<%= getPostQueryString() %>">Edit</a>
        <% if(isAuthenticated) { %>
          <form action="/posts/<%= post.number %>?_method=delete" method="post" class="d-inline">
            <a class="btn btn-primary" href="javascript:void(0)" onclick="confirm('Do you want to delete this?')?this.parentElement.submit():null;">Delete</a>
          </form>
        <% } else { %>
          <a class="btn btn-primary" href="/password/<%= post.number %>/delete">Delete</a>
        <% } %>
      </div>

      <h4 class="mt-3">Comments</h4>

      <% if(commentTrees.length){ %>
        <div class="mt-3 border-bottom">
          <% commentTrees.forEach(function(comment) { %>
            <%- include('partials/comment-show', {
              post: post,
              comment: comment,
              commentForm: commentForm,
              commentError: commentError,
              errors: errors,
            }); %>
          <% }) %>
        </div>
      <% } %>

      <div class="mt-3">
        <%- include('partials/comment-form', {
          actionUrl:'/comments?postId=' + post.number,
          comment: {},
          commentForm: commentForm,
          commentError: commentError,
          parentComment: null,
          errors: errors,
        }); %>
      </div>
    </div>
  </body>
  <script>
  /*  var container = document.getElementById("postBody");
    var doc = container.textContent;
    var regURL = new RegExp("(http|https|ftp|telnet|news|irc)://([-/.a-zA-Z0-9_~#%$?&=:200-377()]+)","gi");
    var regEmail = new RegExp("([xA1-xfeA-z0-9_-]+@[xA1-xfea-z0-9]+\.[a-z0-9]+)","gi");
    //var youtubeLink = new RegExp("(http|https)://)(www\.)+(youtube\.com|youtu\.be)\/([?:watch\?v=]+)","g");
    container.innerHTML = doc.replace(regURL, "<a href='$1://$2' target='_black'>$1:\/\/$2</a>").replace(regEmail,"<a href='mailto:$1'>$1</a>");*/
    const autoWrap = (containerId, selector) => {
  const wrapping = async () => {
    const link = /(\b(https?|ftp|file):\/\/[-A-Z0-9|ㄱ-ㅎ|ㅏ-ㅣ|가-힣|+&@#\/%?=~_|!:,.;]*[-A-Z0-9|ㄱ-ㅎ|ㅏ-ㅣ|가-힣|+&@#\/%=~_|])/gi; // 링크 찾기
    const mail = /((\S+.)@[a-z]+.[a-z]+)/gi;
    const imageType = /\.(?:jpe?g(:(large|orig))?|gif|png(:(large|orig))?|svg)$/i; // 이미지
    const TistoryImage = /(?:\?original)$/i; // 티스토리 ?original 이미지
    const videoType = /\.(?:mp4|webm)$/i; // 비디오
    const audioType = /\.(?:mp3|ogg|wav)$/i; // 오디오
    const youtubeLink = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com|youtu\.be)\/(?:watch\?v=)?/g; // 유튜브 비디오
    const createAnchor = (string, type = "link") => {
      const anchor = document.createElement("a");

      anchor.href = type === "link" ? string : `mailto:${string}`;
      type === "link" &&
        ((anchor.target = "_blank"),
        anchor.setAttribute("rel", "noopener, noreferrer"));
      anchor.innerText = string;

      return anchor;
    };

    document.querySelectorAll(selector).forEach((comment) => {
      !comment.classList.contains("modded") &&
        comment.hasChildNodes &&
        [...comment.childNodes].forEach((text) => {
          if (text.nodeType === 3) {
            let textArray = text.textContent.split(link);
            if (textArray.length === 1)
              textArray = text.textContent.split(mail);
            if (textArray.length === 1) return;
            const fragment = document.createDocumentFragment();

            for (
              let i = 0, length = textArray.length, j = 1;
              i < length;
              i++
            ) {
              if (j % 3 !== 0) {
                const string = textArray[i];
                if (j % 2 === 0) {
                  if (string.includes("http:")) {
                    const anchor = createAnchor(string);

                    fragment.append(anchor);
                  } else {
                    if (
                      imageType.test(string) ||
                      TistoryImage.test(string)
                    ) {
                      const img = document.createElement(
                        "img"
                      );

                      img.src = string;
                      img.alt = "userContent";

                      fragment.append(img);
                    } else if (videoType.test(string)) {
                      const video = document.createElement(
                        "video"
                      );

                      video.src = string;
                      video.autoplay = 1;
                      video.muted = 1;
                      video.loop = 1;
                      video.setAttribute(
                        "playsinline",
                        1
                      );

                      fragment.append(video);
                    } else if (audioType.test(string)) {
                      const audio = document.createElement(
                        "audio"
                      );

                      audio.src = string;
                      audio.controls = 1;

                      fragment.append(audio);
                    } else if (youtubeLink.test(string)) {
                      const wrapper = document.createElement(
                        "div"
                      );
                      const div = document.createElement(
                        "div"
                      );
                      const iframe = document.createElement(
                        "iframe"
                      );

                      wrapper.className =
                        "youtubevid-wrapper";
                      div.className = "resvid";

                      iframe.src = `https://www.youtube.com/embed/${string.replace(
                        youtubeLink,
                        ""
                      )}?rel=0&playsinline=1`;
                      iframe.allowFullscreen = 1;
                      iframe.frameBorder = 0;

                      div.append(iframe);
                      wrapper.append(div);
                      fragment.append(wrapper);
                    } else if (mail.test(string)) {
                      const anchor = createAnchor(
                        string,
                        "mail"
                      );

                      fragment.append(anchor);
                    } else {
                      const anchor = createAnchor(string);

                      fragment.append(anchor);
                    }
                  }
                } else {
                  const textNode = document.createTextNode(
                    string
                  );

                  fragment.append(textNode);
                }

                j += 1;
              } else {
                j = 1;
              }
            }

            text.parentNode.insertBefore(fragment, text);
            text.remove();
          }

          comment.classList.add("modded");
        });
    });
  };

  document.addEventListener(
    "DOMContentLoaded",
    wrapping().then(() => {
      // 수정, 삭제, 이전 댓글 불러오기 등 변화 감지
      const container = document.getElementById(containerId);
      const observer = new MutationObserver(wrapping);

      container &&
        observer.observe(container, {
          attributes: true,
          childList: true,
          subtree: true,
        });
    })
  );
};
  </script>
  <script>autoWrap("postBody", ".postBodyClass");</script>
</html>
